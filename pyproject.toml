[project]
name = "mindflow"
version = "1.0.0"
description = "AI-first task manager powered by GPT + Google Apps Script"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "MIT" }
authors = [
    { name = "MindFlow Contributors" }
]
keywords = ["ai", "task-manager", "gpt", "google-apps-script", "productivity"]

dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-xdist>=3.3.1",
    "pytest-timeout>=2.1.0",
    "pytest-json-report>=1.5.0",
    "pytest-asyncio>=0.21.0",
    "factory-boy>=3.3.0",
    "faker>=20.0.0",
    "requests-mock>=1.11.0",
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "rich>=13.7.0",
    "hypothesis>=6.92.0",
]

lint = [
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "types-requests>=2.31.0",
]

[project.scripts]
mindflow-test = "tests.runner:main"
mindflow-seed = "tests.seed_data:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["tests"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "-q",
    "--strict-markers",
    "--cov=tests",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=json",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "edge_case: Edge case tests",
    "slow: Slow running tests",
    "api: API endpoint tests",
]

[tool.coverage.run]
source = ["tests"]
omit = ["tests/conftest.py", "tests/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
